#!/bin/bash
# "m5.sh"
#convert a string into an md5sum and print to stdout
# work in progress:  copy to clipboard automatically
# and based on the input, iterate the hash often, but
# able to replicate

unhashed="$1"
originput="$1"
loops="$2"
. ifexists gcol

if [ "$2" ]; then
   errck=pass
else
   echo Error... include string then number of iterations && exit 1
fi

if [ "$3" ]; then
   echo "Error... this script does not accept spaces in the input at this time." && exit 1
   errck=fail
else
   errck=pass
fi


linuxhash() {
   starttime=$(date +%s)
   while read n; do
      newhash=$(echo -n "$unhashed" | md5sum | cut -d ' ' -f 1)
      unhashed=$newhash
   done <<< $(seq $loops)
   stoptime=$(date +%s)
}

darwinhash() {
   starttime=$(date +%s)
   while read n; do
      newhash=$(echo -n "$unhashed" | md5 | cut -d ' ' -f 1)
      unhashed=$newhash
   done <<< $(seq $loops)
   stoptime=$(date +%s)
}


platformtype=$(uname -s)
case $platformtype in
      Linux)
            linuxhash
            ;;
      Darwin)
            darwinhash
            ;;
      *)
            linuxhash
            ;;
esac

. gcol red
echo -n "$loops " 
. gcol blue
echo -n "iterations of "
. gcol red
echo -n "$originput "
. gcol blue
echo "is"
. gcol yellow
echo "$newhash"
. gcol blue
timelen=$(( $stoptime - $starttime ))
if [ ${timelen} == 1 ]; then
   timeunit='second'
else
   timeunit='seconds'
fi
echo '('Computed in ${timelen} ${timeunit}')'
. gcol white
