#!/bin/bash
#
#                                      _         ____ ____  
#                      _ __ ___   __ _| | _____ / ___/ ___| 
#                     | '_ ` _ \ / _` | |/ / _ \ |   \___ \ 
#                     | | | | | | (_| |   <  __/ |___ ___) |
#                     |_| |_| |_|\__,_|_|\_\___|\____|____/ 
#                                                           
#_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
#+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_
#
#
# Check for proper syntax
if [ -d "$1" ]; then
#  echo "Performing actions on $1"
  nullbyte=0
else
  echo "Error.  Provide a directory containing images as an argument"
  echo "  Usage:  makeiso <path to directory>"
  echo "     ie:  makeiso \"/home/adam/Desktop/original-images-directory\""
  exit 1
fi
#_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
#+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_
# 
hash figlet >&/dev/null
if [ $? -eq 0 ]; then
   fl=true
   figlet -c makeCS | sed 's/^./#\ /g'
else
  echo " install figlet for awesome ascii art!"
  echo ""
  echo " type 'apt install figlet' on linux"
  echo "      -or- "
  echo " type 'brew install figlet' for mac."
 fi
#
# set timestamp variable
timestamp() {
echo "$(date +%H%M%S)"
}
#
# define some variables
#full path of source

   a="$1"

#shortname of source
   b="$(basename $a)"

#full path of source of source (parent full)
   c="$(dirname $a)"

#short name of new archive folder
   s="$b"_archive

#full pathname of new archive folder
   n="$c"/"$s"

#short name of thumbnail directory
   t="$b"_thumbnails_"$(timestamp)"

#full pathname of thumbnail directory
   y="$n"/"$t"

#full path to thumbnail list
   FILE="$n/thumblist.txt"

#name of contact sheet jpg
  cs="$n/cs_$c_$(timestamp).jpg"

mkdir -p "$n"
mkdir -p "$y"

#
#echo "$a copy  "
#echo "$b basename  "
#echo "$c dirname  "
#echo "$s short new "
#echo "$n full new  "
#echo "$t short thumb  "
#echo "$y full thumb  "
#echo "$FILE full thumblist "
#
#

#_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
#+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_
#
# Resize images into thumbnails and make a proof sheet

echo "Creating thumbnails. Please wait."
makethumbs() {
  ls -1 "$a" | while read d; do
     mtyp="$(file --mime-type $a/$d | grep 'image' | awk '{ print $2 }')"
     if [ "$(echo $mtyp | grep 'image')" ];
     then
       e="$(echo $d | sed -E 's/\.+.*$/\.jpg/g')"
       convert "$a/$d" -colorspace sRGB -resize 300x300^ -unsharp 0x1 -gravity center -extent 180x180 "$y/$e"
       echo "$d --> $e"
     fi
  done
}
makethumbs

#_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
#+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_
#
# Make the proof sheet and store it inside the target folder
# make a list of filenames for thumbnails and store them in $FILE
gathert() {

#checks to see if file already exists
if [ -f "$FILE" ]; then
    #removes it if it does
    rm -v "$FILE"
fi
# echo the list of files that end in jpg only to the file
ls -1 "$y" | grep jpg | while read line; do echo "$y/$line " >> "$FILE"
done
}
gathert
if [ -f "$FILE" ]; then
  
#_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
#+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_
#
#Run the montage make the contact sheet
cd "$y"

montage -geometry 300x300 @"$FILE" "$cs"
if [ $? -gt 0 ]; then
read -p "Error Occurred! Contact sheet may have errors! Press <enter>.   "
else
echo "Contact sheet has been created as $cs"
echo "Copying..."
cp "$cs" "$a" && echo "Successfully copied to source directory." || "Error in copying to source directory."
fi
#_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
#+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_
#
else
  echo "Could not create contact sheet.  No thumbnails!"
fi

